{% extends 'base.html.twig' %}

{% block title %}
    Résultats du sondage – {{ survey.title }}
{% endblock %}

{% block body %}
    <h1>Résultats du sondage – {{ survey.title }}</h1>
    <p>Rappel : {{ survey.question }}</p>
    <h2>Tableau 1. Synthèse des résultats</h2>
    <table class="table table-striped table-bordered table-hover">
        <thead>
            <th scope="col">Proposition</th>
            <th scope="col">Résultat</th>
            <th scope="col">Pourcentage</th>
        </thead>
        {% for proposition in survey.propositions %}
            <tr>
                <th scope="row">{{ proposition.wording }}</th>
                <td>{{ proposition.answers|length }}</td>
                {% set pourcentage = proposition.answers|length * 100 / number_answers %}
                <td>{{ pourcentage|number_format(2) }}%</td>
            </tr>
        {% endfor %}
        </table>
        <hr>
        <h2>Tableau 2. Résultats détaillés</h2>
        <button onclick="init()">Réinitialiser les filtres</button>
        <table>
            <thead>
                <tr id="iddivselects">             
                    <th>
                        <select onchange="creationParameter()" aria-label="Filtrer par answer" id="answer_id"></select>
                    </th>
                    <th>Comment</th>
                    <th>Email</th>
                    <th>
                        <select onchange="creationParameter()" aria-label="Filtrer par proposition" id="proposition_id"></select>
                    </th>
                    <th>
                        <select onchange="creationParameter()" aria-label="Filtrer par device" id="answer_device_type"></select>
                    </th>
                    <th>
                        <select onchange="creationParameter()" aria-label="Filtrer par os" id="answer_os_name"></select>
                    </th>
                    <th>
                        <select onchange="creationParameter()" aria-label="Filtrer par browser" id="answer_browser_name"></select>
                    </th>
                    <th>
                        <select onchange="creationParameter()" aria-label="Filtrer par assistive" id="assistive_id"></select>
                    </th>
                    <th>User_agent</th>
                </tr>
            </thead>
            <tbody id="idBodyResult"></tbody>
        </table>
        <script src="{{ asset('_js/TableClass.js') }}"></script>
        <script>

var url_ajax = "http://127.0.0.1:8000/";
//"http://sondage.atalan.fr/survey_atalan/public/index.php/";

//var urlcourante = document.location.href;
//console.log("url : " + urlcourante);
//http://sondage.atalan.fr/survey_atalan/public/index.php/

function getXmlhttp() {
	if (window.XMLHttpRequest)
		return new XMLHttpRequest();
	else if (window.ActiveXObject)
		return new ActiveXObject("Msxml2.XMLHTTP");
	else
		throw new Error("Could not create HTTP request object.");
}

//select param_ajax
function select_ajax(value,label,optionvalue,optionlabel) {
    var x = value.substring(value.indexOf("_")+1, value.length);  
    var para ="survey={{ survey.id }}&" + value + "=" + x;
    xmlhttp=getXmlhttp();
    xmlhttp.open("GET",url_ajax+"ajax?"+para,true);
    xmlhttp.onreadystatechange=mafonction;
    xmlhttp.send();
    function mafonction() {
        if (this.readyState==4 && this.status==200) {
            var result = JSON.parse(this.responseText);
            let parent = document.getElementById(value);        
            if (result[value].length>1) {
                opt=document.createElement("option");
                opt.innerHTML="all " + value;
                opt.value=optionvalue;
                parent.appendChild(opt);                   
            } else {
                parent.disabled="true";
            }
            for (let i=0;i<result[value].length;i++) {
                opt=document.createElement("option");
                
                if (label!=null)
                    opt.innerHTML=label + result[value][i][optionlabel];
                else
                    opt.innerHTML=result[value][i][optionlabel];
                
                opt.value=result[value][i][optionvalue];
                parent.appendChild(opt);
            }
        }
    }
}

function creationParameter() {
    let selects=iddivselects.querySelectorAll("select");
    var tab=[];
    for (let i=0;i<selects.length;i++)
    tab.push(selects[i].id + "=" + selects[i].value);
    var argument = tab.join("&");
    creationTable(argument);
}

function creationTable(parameter) {
    var para ="survey={{ survey.id }}&" + parameter;
    xmlhttp=getXmlhttp();
    xmlhttp.open("GET",url_ajax+"ajaxtable?"+para,true);
    xmlhttp.onreadystatechange=mafonction;
    xmlhttp.send();
    function mafonction() {
        if (xmlhttp.readyState==4 && xmlhttp.status==200) {
            console.log(xmlhttp.responseText);
            var result = JSON.parse(xmlhttp.responseText);
            let test = new TableClass(result,"idBodyResult");
        }
    }
}

function reinitialisation() {
    select_ajax("proposition_id",null,"id","wording");
    select_ajax("answer_id","answer n°","id","id");
    select_ajax("answer_device_type",null,"device_type","device_type");
    select_ajax("answer_os_name",null,"os_name","os_name");
    select_ajax("answer_browser_name",null,"browser_name","browser_name");
    select_ajax("assistive_id",null,"id","name");
    let para="answer_id=id&proposition_id=id&answer_device_type=device_type&answer_os_name=os_name&answer_browser_name=browser_name&assistive_id=id";
    creationTable(para);
}
reinitialisation();

function init() {
    window.location.reload();
}
       </script>
{% endblock %}